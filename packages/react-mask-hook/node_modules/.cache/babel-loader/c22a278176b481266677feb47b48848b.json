{"ast":null,"code":"/**\n * \n * @param value \n * @param mask\n */\nfunction fitInputValueIntoMask(value, mask) {\n  const valueCharacters = value.split('');\n  return mask.reduce((result, patternOrCharacter, characterPosition) => {\n    if (patternOrCharacter instanceof RegExp) {}\n\n    return result;\n  }, [...mask]);\n}\n\nexport default fitInputValueIntoMask;","map":{"version":3,"sources":["/home/codespace/workspace/react-mask-hook/src/functions/fitInputValueIntoMask.ts"],"names":["fitInputValueIntoMask","value","mask","valueCharacters","split","reduce","result","patternOrCharacter","characterPosition","RegExp"],"mappings":"AAGA;AACA;AACA;AACA;AACA;AACA,SAASA,qBAAT,CAA+BC,KAA/B,EAA8CC,IAA9C,EAAgE;AAC5D,QAAMC,eAAe,GAAGF,KAAK,CAACG,KAAN,CAAY,EAAZ,CAAxB;AAEA,SAAOF,IAAI,CAACG,MAAL,CAAY,CAACC,MAAD,EAASC,kBAAT,EAA6BC,iBAA7B,KAAmD;AAClE,QAAID,kBAAkB,YAAYE,MAAlC,EAA0C,CAEzC;;AAED,WAAOH,MAAP;AACH,GANM,EAMJ,CAAC,GAAGJ,IAAJ,CANI,CAAP;AAOH;;AAED,eAAeF,qBAAf","sourcesContent":["import { Mask } from '../hooks/useMask'\n\n\n/**\n * \n * @param value \n * @param mask\n */\nfunction fitInputValueIntoMask(value: string, mask: Mask): Mask {\n    const valueCharacters = value.split('')\n\n    return mask.reduce((result, patternOrCharacter, characterPosition) => {\n        if (patternOrCharacter instanceof RegExp) {\n\n        }\n\n        return result\n    }, [...mask])\n}\n\nexport default fitInputValueIntoMask"]},"metadata":{},"sourceType":"module"}